@use "../../../styles/Ui/properties";
@use "@dxt-ui/styles/properties" as ui;
@use "@dxt-ui/constructor/Button/style" as Button;

@include ui.initDesignBasic('d1.button') {
  // Basic styles for a component
  // Базовый стили для компонента
  @include Button.mixinButton;

  // Styles from tokens
  // Стили из токенов
  // :style [!] System label / Системная метка
  & {
    --d1-button-padding: calc(var(--sys-height) * var(--d1-sys-spacing-adaptive-md));
    --d1-button-transitionFunction: var(--d-sys-transitionFunction-standard);
    
    border-radius: calc(var(--sys-height) * var(--d1-sys-rounded-adaptive-md));
    
    transition-duration: var(--d-sys-transitionDuration-fade-enter);
    transition-property: grid-template-columns, background-color, background-image, border, box-shadow;
    
    @include ui.focus {
      @include ui.gradient(#{var(--sys-color)});
      @include ui.gradientOpacity(#{var(--d1-sys-opacity-focus)});
    }
    
    @include ui.hover {
      @include ui.gradient(#{var(--sys-color)});
      @include ui.gradientOpacity(#{var(--d1-sys-opacity-hover)});
      
      transition-duration: var(--d-sys-transitionDuration-sm);
    }
    
    @include ui.active {
      @include ui.gradient(#{var(--sys-color)});
      @include ui.gradientOpacity(#{var(--d1-sys-opacity-pressed)});
      
      transition-duration: var(--d-sys-transitionDuration-sm);
    }
    
    @include ui.disabled {
      @include ui.color(#{var(--d1-sys-palette-onSurface)});
      @include ui.colorOpacity(#{var(--d1-sys-opacity-surface-disabled)});
      
      transition-duration: var(--d-sys-transitionDuration-sm);
    }
    
    &--adaptive {
      &--iconAlways {
        @include ui.justifyContent(#{flex-start});
        
        & > .d1-button__icon {
          --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
        }
        
        & > *:not(.d1-button__icon) {
          display: none;
        }
      }
      
      &--block {
        @include ui.width(#{100%});
      }
      
      &--auto {
        @include ui.width(#{fit-content});
      }
      
      &--iconSm {
        @media screen and (min-width: 640px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--iconMd {
        @media screen and (min-width: 768px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--iconLg {
        @media screen and (min-width: 1024px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--iconXl {
        @media screen and (min-width: 1280px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--icon2xl {
        @media screen and (min-width: 1536px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--fullSm {
        @media screen and (max-width: calc(640px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--fullMd {
        @media screen and (max-width: calc(768px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--fullLg {
        @media screen and (max-width: calc(1024px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--fullXl {
        @media screen and (max-width: calc(1280px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--full2xl {
        @media screen and (max-width: calc(1536px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
    }
    
    &--container {
      &--iconSm {
        @container (min-width: 640px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--iconMd {
        @container (min-width: 768px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--iconLg {
        @container (min-width: 1024px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--iconXl {
        @container (min-width: 1280px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--icon2xl {
        @container (min-width: 1536px) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--fullSm {
        @container (max-width: calc(640px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--fullMd {
        @container (max-width: calc(768px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--fullLg {
        @container (max-width: calc(1024px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--fullXl {
        @container (max-width: calc(1280px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
      
      &--full2xl {
        @container (max-width: calc(1536px - 1px)) {
          @include ui.justifyContent(#{flex-start});
          
          & > .d1-button__icon {
            --d1-button-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }
          
          & > *:not(.d1-button__icon) {
            display: none;
          }
        }
      }
    }
    
    &--textAlign {
      &--left {
        @include ui.justifyContent(#{flex-start});
        
        @include ui.textAlign(#{left});
      }
      
      &--right {
        @include ui.justifyContent(#{flex-end});
        
        @include ui.textAlign(#{right});
      }
    }
    
    &--primary {
      @include ui.color(#{var(--d1-sys-palette-onPrimary)});
      @include ui.colorOpacity(#{var(--d1-sys-opacity-primary-high)});
      
      @include ui.backgroundOpacity(#{var(--d1-sys-opacity-primary-high)});
      @include ui.paletteBackground(#{var(--d1-sys-palette-primary)});
      
      box-shadow: var(--d1-sys-shadow-md);
      backdrop-filter: var(--d1-sys-blur-md);
      
      @include ui.active('.d1-button') {
        box-shadow: var(--d1-sys-shadow-lg);
      }
      
      @include ui.disabled('.d1-button') {
        @include ui.backgroundColor(#{var(--d1-sys-palette-onSurface)});
        @include ui.backgroundOpacity(#{var(--d1-sys-opacity-disabled)});
        
        box-shadow: none;
      }
      
      &.d1-button--selected {
        @include ui.paletteBackground(#{var(--d1-sys-palette-primaryVariant)});
      }
    }
    
    &--secondary {
      @include ui.colorOpacity(#{var(--d1-sys-opacity-surface-high)});
      @include ui.paletteColor(#{var(--d1-sys-palette-primary)});
      
      @include ui.backgroundOpacity(#{var(--d1-sys-opacity-overlay)});
      @include ui.paletteBackground(#{var(--d1-sys-palette-primary)});
      
      backdrop-filter: var(--d1-sys-blur-sm);
      
      @include ui.disabled('.d1-button') {
        @include ui.backgroundColor(#{var(--d1-sys-palette-onSurface)});
      }
      
      &.d1-button--selected {
        @include ui.color(#{var(--d1-sys-palette-primaryVariant)});
        
        @include ui.paletteBackground(#{var(--d1-sys-palette-primaryVariant)});
      }
    }
    
    &--outline {
      @include ui.colorOpacity(#{var(--d1-sys-opacity-surface-high)});
      @include ui.paletteColor(#{var(--d1-sys-palette-primary)});
      
      &::after {
        content: ' ';
        position: absolute;
        @include ui.inset(#{0});
        
        border-radius: inherit;
        border-width: var(--d1-sys-spacing-border);
        border-style: solid;
        @include ui.borderOpacity(#{var(--d1-sys-opacity-outline)});
        @include ui.paletteBorder(#{var(--d1-sys-palette-primary)});
        
        transition-timing-function: linear;
        transition-duration: var(--d-sys-transitionDuration-lg-open);
        transition-property: border;
      }
      
      @include ui.active('.d1-button') {
        &::after {
          content: ' ';
          border-width: var(--d1-sys-spacing-2px);
          
          transition-duration: var(--d-sys-transitionDuration-xs);
        }
      }
      
      @include ui.disabled('.d1-button') {
        &::after {
          content: ' ';
          @include ui.borderOpacity(#{0});
        }
      }
      
      &.d1-button--selected {
        @include ui.color(#{var(--d1-sys-palette-primaryVariant)});
        
        @include ui.paletteBorder(#{var(--d1-sys-palette-primaryVariant)});
      }
    }
    
    &--text {
      --d1-button-compressed: .64;
      
      @include ui.colorOpacity(#{var(--d1-sys-opacity-surface-high)});
      @include ui.paletteColor(#{var(--d1-sys-palette-primary)});
      
      &::after {
        content: ' ';
        position: absolute;
        @include ui.inset(#{0});
        
        opacity: 0;
        
        border-radius: inherit;
        border-width: var(--d1-sys-spacing-2px);
        border-style: solid;
        @include ui.borderOpacity(#{var(--d1-sys-opacity-scrim)});
        @include ui.paletteBorder(#{var(--d1-sys-palette-primary)});
        
        transition-timing-function: linear;
        transition-duration: var(--d-sys-transitionDuration-lg-open);
        transition-property: opacity;
      }
      
      @include ui.active('.d1-button') {
        &::after {
          content: ' ';
          opacity: 1;
          
          transition-duration: var(--d-sys-transitionDuration-xs);
        }
      }
      
      &.d1-button--selected {
        @include ui.color(#{var(--d1-sys-palette-primaryVariant)});
      }
      
      @media screen and (max-width: calc(768px - 1px)) {
        --d1-button-compressed: .40;
      }
    }
    
    &--size {
      &--xs {
        @include ui.height(#{var(--d1-ref-spacing-8)});
        
        font-family: var(--d1-sys-font-family-basic), sans-serif;
        @include ui.fontSize(#{var(--d1-sys-font-size-sm)});
        font-weight: var(--d1-sys-font-weight-medium);
        @include ui.lineHeight(#{var(--d1-sys-lineHeight-sm)});
        letter-spacing: var(--d1-sys-letterSpacing-xs);
      }
      
      &--sm {
        @include ui.height(#{var(--d1-ref-spacing-10)});
        
        font-family: var(--d1-sys-font-family-basic), sans-serif;
        @include ui.fontSize(#{var(--d1-sys-font-size-sm)});
        font-weight: var(--d1-sys-font-weight-medium);
        @include ui.lineHeight(#{var(--d1-sys-lineHeight-sm)});
        letter-spacing: var(--d1-sys-letterSpacing-xs);
      }
      
      &--md {
        @include ui.height(#{var(--d1-ref-spacing-12)});
        
        font-family: var(--d1-sys-font-family-basic), sans-serif;
        @include ui.fontSize(#{var(--d1-sys-font-size-md)});
        font-weight: var(--d1-sys-font-weight-medium);
        @include ui.lineHeight(#{var(--d1-sys-lineHeight-md)});
        letter-spacing: var(--d1-sys-letterSpacing-sm);
      }
      
      &--lg {
        @include ui.height(#{var(--d1-ref-spacing-14)});
        
        font-family: var(--d1-sys-font-family-basic), sans-serif;
        @include ui.fontSize(#{var(--d1-sys-font-size-headlineSmall)});
        font-weight: var(--d1-sys-font-weight-regular);
        @include ui.lineHeight(#{var(--d1-sys-lineHeight-headlineSmall)});
        letter-spacing: var(--d1-sys-letterSpacing-none);
      }
      
      &--xl {
        @include ui.height(#{var(--d1-ref-spacing-16)});
        
        font-family: var(--d1-sys-font-family-basic), sans-serif;
        @include ui.fontSize(#{var(--d1-sys-font-size-headlineMedium)});
        font-weight: var(--d1-sys-font-weight-regular);
        @include ui.lineHeight(#{var(--d1-sys-lineHeight-headlineMedium)});
        letter-spacing: var(--d1-sys-letterSpacing-none);
      }
    }
    
    &--roundedFull {
      border-radius: var(--d1-sys-rounded-full);
    }
  }
  // :style [!] System label / Системная метка

  // Here are the user styles
  // Здесь пользовательские стили
}
