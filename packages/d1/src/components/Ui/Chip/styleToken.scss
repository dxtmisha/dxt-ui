@use "../../../styles/Ui/properties";
@use "@dxtmisha/styles/properties" as ui;
@use "@dxtmisha/constructor/Chip/style" as Chip;

@include ui.initDesignBasic('d1.chip') {
  // Basic styles for a component
  // Базовый стили для компонента
  @include Chip.mixinChip;

  // Styles from tokens
  // Стили из токенов
  // :style [!] System label / Системная метка
  & {
    --d1-chip-padding: calc(var(--sys-height) * .32);
    --d1-chip-transitionFunction: var(--d-sys-transitionFunction-standard);

    font-family: var(--d1-sys-font-family-basic), sans-serif;
    @include ui.fontSize(#{var(--d1-sys-font-size-sm)});
    font-weight: var(--d1-sys-font-weight-medium);
    @include ui.lineHeight(#{var(--d1-sys-lineHeight-sm)});
    letter-spacing: var(--d1-sys-letterSpacing-xs);

    border-radius: calc(var(--sys-height) * var(--d1-sys-rounded-adaptive-sm));

    transition-duration: var(--d-sys-transitionDuration-fade-enter);
    transition-property: grid-template-columns, background-color, background-image, border, box-shadow;

    @include ui.focus {
      @include ui.gradient(#{var(--sys-color)});
      @include ui.gradientOpacity(#{var(--d1-sys-opacity-focus)});
    }

    @include ui.hover {
      @include ui.gradient(#{var(--sys-color)});
      @include ui.gradientOpacity(#{var(--d1-sys-opacity-hover)});

      transition-duration: var(--d-sys-transitionDuration-sm);
    }

    @include ui.active {
      @include ui.gradient(#{var(--sys-color)});
      @include ui.gradientOpacity(#{var(--d1-sys-opacity-pressed)});

      transition-duration: var(--d-sys-transitionDuration-sm);
    }

    @include ui.disabled {
      transition-duration: var(--d-sys-transitionDuration-sm);
    }

    &--adaptive {
      &--iconAlways {
        @include ui.justifyContent(#{flex-start});

        & > .d1-chip__icon {
          --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
        }

        & > *:not(.d1-chip__icon) {
          display: none;
        }
      }

      &--block {
        @include ui.width(#{100%});
      }

      &--auto {
        @include ui.width(#{fit-content});
      }

      &--iconSm {
        @media screen and (min-width: 640px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--iconMd {
        @media screen and (min-width: 768px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--iconLg {
        @media screen and (min-width: 1024px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--iconXl {
        @media screen and (min-width: 1280px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--icon2xl {
        @media screen and (min-width: 1536px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--fullSm {
        @media screen and (max-width: calc(640px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--fullMd {
        @media screen and (max-width: calc(768px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--fullLg {
        @media screen and (max-width: calc(1024px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--fullXl {
        @media screen and (max-width: calc(1280px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--full2xl {
        @media screen and (max-width: calc(1536px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }
    }

    &--container {
      &--iconSm {
        @container (min-width: 640px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--iconMd {
        @container (min-width: 768px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--iconLg {
        @container (min-width: 1024px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--iconXl {
        @container (min-width: 1280px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--icon2xl {
        @container (min-width: 1536px) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--fullSm {
        @container (max-width: calc(640px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--fullMd {
        @container (max-width: calc(768px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--fullLg {
        @container (max-width: calc(1024px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--fullXl {
        @container (max-width: calc(1280px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }

      &--full2xl {
        @container (max-width: calc(1536px - 1px)) {
          @include ui.justifyContent(#{flex-start});

          & > .d1-chip__icon {
            --d1-chip-padding: calc((var(--sys-height) - var(--d1-icon-_width)) / 2) !important;
          }

          & > *:not(.d1-chip__icon) {
            display: none;
          }
        }
      }
    }

    &--textAlign {
      &--left {
        @include ui.justifyContent(#{flex-start});

        @include ui.textAlign(#{left});
      }

      &--right {
        @include ui.justifyContent(#{flex-end});

        @include ui.textAlign(#{right});
      }
    }

    &--input {
      &::after {
        content: ' ';
        position: absolute;
        @include ui.inset(#{0});

        border-radius: inherit;
        border-width: var(--d1-sys-spacing-outline);
        border-style: solid;
        @include ui.borderOpacity(#{var(--d1-sys-opacity-outline)}); @include ui.borderColor('init');
        @include ui.paletteBorder(#{var(--d1-sys-palette-primary)});

        transition-timing-function: linear;
        transition-duration: var(--d-sys-transitionDuration-lg-open);
        transition-property: border;
      }

      @include ui.active('.d1-chip') {
        &::after {
          content: ' ';
          border-width: var(--d1-sys-spacing-2px);

          transition-duration: var(--d-sys-transitionDuration-xs);
        }
      }

      @include ui.disabled('.d1-chip') {
        @include ui.color(#{var(--d1-sys-palette-onSurface)});
        @include ui.colorOpacity(#{var(--d1-sys-opacity-surface-disabled)});

        &::after {
          content: ' ';
          @include ui.borderOpacity(#{0}); @include ui.borderColor('init');
        }
      }

      &.d1-chip--selected {
        @include ui.backgroundOpacity(#{var(--d1-sys-opacity-overlay)}); @include ui.backgroundColor('init');
        @include ui.paletteBackground(#{var(--d1-sys-palette-primaryVariant)});
      }
    }

    &--assistive {
      @include ui.colorOpacity(#{var(--d1-sys-opacity-surface-high)}); @include ui.color('init');
      @include ui.paletteColor(#{var(--d1-sys-palette-primary)});

      @include ui.backgroundOpacity(#{var(--d1-sys-opacity-overlay)}); @include ui.backgroundColor('init');
      @include ui.paletteBackground(#{var(--d1-sys-palette-primary)});

      backdrop-filter: var(--d1-sys-blur-md);

      @include ui.disabled('.d1-chip') {
        @include ui.color(#{var(--d1-sys-palette-onSurface)});
        @include ui.colorOpacity(#{var(--d1-sys-opacity-surface-disabled)});

        @include ui.backgroundColor(#{var(--d1-sys-palette-onSurface)});
      }

      &.d1-chip--selected {
        @include ui.color(#{var(--d1-sys-palette-onPrimary)});
        @include ui.colorOpacity(#{var(--d1-sys-opacity-primary-high)});

        @include ui.backgroundOpacity(#{var(--d1-sys-opacity-primary-high)}); @include ui.backgroundColor('init');
        @include ui.paletteBackground(#{var(--d1-sys-palette-primaryVariant)});
      }
    }

    &--size {
      &--sm {
        @include ui.height(#{var(--d1-ref-spacing-6)});
      }

      &--md {
        @include ui.height(#{var(--d1-ref-spacing-8)});
      }

      &--lg {
        @include ui.height(#{var(--d1-ref-spacing-10)});
      }
    }

    &--roundedFull {
      border-radius: var(--d1-sys-rounded-full);
    }
  }
  // :style [!] System label / Системная метка

  // Here are the user styles
  // Здесь пользовательские стили
}
