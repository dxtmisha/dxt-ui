@use "sass:string";

/// Returns width based on aspect ratio values
/// Возвращает ширину на основе значений соотношения сторон
/// @param {String} $value
/// @return {String}
@function getWidthByRatio($value) {
  $separator: string.index($value, '/');
  @return string.slice($value, 0, $separator - 1);
}

/// Returns width based on aspect ratio values
/// Возвращает ширину на основе значений соотношения сторон
/// @param {String} $value
/// @return {String}
@function getHeightByRatio($value) {
  $separator: string.index($value, '/');
  @return string.slice($value, $separator + 1);
}

@mixin width($value) {
  --sys-width: #{$value};
  width: var(--sys-width);
}

@mixin height($value) {
  --sys-height: #{$value};
  height: var(--sys-height);
}

@mixin widthDevice($value) {
  @include width(#{$value}dvw);
}

@mixin heightDevice($value) {
  @include height(#{$value}dvh);
}

@mixin maxWidthDevice($value) {
  max-width: #{$value}dvw;
}

@mixin maxHeightDevice($value) {
  max-height: #{$value}dvh;
}

@mixin widthBasis($value) {
  @include width($value);
  flex-basis: var(--sys-width);
  max-width: 100%;
}

@mixin heightBasis($value) {
  @include height($value);
  flex-basis: var(--sys-height);
  max-height: 100%;
}

@mixin aspectRatio($value) {
  aspect-ratio: #{$value};
}

@mixin aspectRatioWidth($value) {
  @include aspectRatio($value);
}

@mixin aspectRatioHeight($value) {
  @include aspectRatio($value);
}

@mixin squared($value) {
  @include widthBasis($value);
  @include aspectRatio(#{1/1});
}

@mixin circle($value) {
  @include squared($value);
  border-radius: 100%;
}
